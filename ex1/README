jenia90, lilach
Yevgeni Dysin (320884216), Lilach Kelman (305390098)
EX: 1

FILES:
Makefile - Make file that supports compiling and running the simpletest and all the associated libraries, cleaning
and creating tar file with source files.
README - This file.
osm.cpp - Source code file that contains the implementation of the functions declared in the supplied osm.h header file.
simpletest.cpp - Main executable file that tests all of the time measurement functions.
funcplaceholder.h - Header file with declaration of the dummy function for the functions call test.
funcplaceholder.cpp - Source file with implementation of the dummy function for the functions call test.

REMARKS:

We Implemented all of the functions delcared in the osm.h file and also create a separate source file containing a
single function to eliminate the possibility where the compiler converts our dummy function call into an inline
function thus optimizing the call time. Also, to prettify the code and make it more readable we used a template
function that receives a functor as parameter and then executes it inside the iteration for loop.

We had to copy paste the single instruction calls 10 times inside the for loop to eliminate compiler optimizations.

Finally, for the disk timing test we create a file prior to running the test and then write to it with each iteration
 a string with the size of exactly one block.

ANSWERS:
'strace -s 1000 WhatIDo 1' Output:
1) mkdir("Welcome", 0775)                  = 0
2) mkdir("Welcome/To", 0775)               = 0
3) open("Welcome/To/OS2016", O_WRONLY|O_CREAT|O_TRUNC, 0666) = 3
4) fstat(3, {st_mode=S_IFREG|0644, st_size=0, ...}) = 0
5) write(3, "
                        jenia90\nIf you didn't read the course guidelines yet --- do it right now!\n1", 185) = 185
6) close(3)                                = 0
7) unlink("Welcome/To/OS2016")             = 0
8) rmdir("Welcome/To/")                    = 0
9) rmdir("Welcome/")                       = 0
10) exit_group(0)                           = ?
11) +++ exited with 0 +++

Program Description:
Basically it creates a directory and another directory inside that directory. Then, it creates a file with write only
 permissions and writes the string in line (5) to the file. The program then closes the file and deletes it and the
 directories it created earlier. Also, it receives a single argument which it then converts to string and append to
 the default string it writes to the file.

Line Descriptions:
1) Creating new directory with access permissions of read and write named 'Welcome'
2) Creating new directory with access permissions of read and write named 'To' inside 'Welcome'
3) Creating a new file named 'OS2016' with write only permissions and returns its file
descriptor (ID)
4) These functions return information about a file. It checks if the file is a regular file and
if it has read and write permissions.
5) Writes a given string to a file.
6) Closes the file and destroys its file pointer.
7) Removes the label of a given file from the file system (deletes the file).
8) Removes (deletes) the 'To' directory.
9) Removes (deletes) the 'Welcome' directory.
10) Exits the current thread and all the threads associated with it's parent process.

